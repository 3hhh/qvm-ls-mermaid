#!/bin/bash
#run [browser]
set -e -o pipefail

SCRIPT_DIR="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"

TEMPLATE="$SCRIPT_DIR/index-template.html"
DTEMPLATE="$SCRIPT_DIR/details-template.html"
MERMAID="$SCRIPT_DIR/qvm-ls-mermaid.js"
TARGET="$SCRIPT_DIR/index.html"
DETAILS_DIR="$SCRIPT_DIR/details"

function error {
  local msg="$1"
  >&2 echo "ERROR: $msg"
  exit 1
}

function warn {
  local msg="$1"
  >&2 echo "WARNING: $msg"
}

#updateDetails [id] [details] [template]
function updateDetails {
local id="$1"
local details="$2"
local temp="$3"
local ofile="$DETAILS_DIR/$id.html"
local out=""

if [ -f "$ofile" ] ; then
  #update existing
  local re='^[ ]*<div id="details">$'
  local line=
  local inDiv=1
  local found=1
  while IFS= read -r line ; do
    if [[ "$line" =~ $re ]] ; then
      inDiv=0
      found=0
      out="$out"$'\n''<div id="details">'$'\n'"$details"$'\n'"</div>"
    else
      if [ $inDiv -eq 0 ] ; then
        [[ "$line" == *"</div>" ]] && inDiv=1
        continue
      else
        out="$out"$'\n'"$line"
      fi
    fi
  done < "$ofile"
  out="${out:1}"
  [ $found -eq 0 ] || warn "No details section could be found for $ofile. Skipping..."
else
  #create from scratch
  out="${temp/<title>TITLE<\/title>/<title>$id<\/title>}"
  out="${out/<h1>TITLE<\/h1>/<h1>$id<\/h1>}"
  out="${out/<div id=\"details\"><\/div>/<div id=\"details\">$'\n'$details$'\n'<\/div>}"
fi

echo "$out" > "$ofile"
}

[ -f "$MERMAID" ] || error "No $MERMAID file to read from."

#obtain mermaid code & additional details (-D)
inDiv=1
mermaid=""
details=""
id=""
declare -A id2details=()
re='^%% <div id="details_(.*)">$'
while IFS= read -r line ; do
  if [[ "$line" =~ $re ]] ; then
    inDiv=0
    id="${BASH_REMATCH[1]}"
    details=""
    continue
  fi

  if [ $inDiv -eq 0 ] ; then
    if [[ "$line" == "%% </div>" ]] ; then
      inDiv=1
      id2details["$id"]="$details"
      details=""
    else
      [ -z "$details" ] && details="${line:3}" || details="$details"$'\n'"${line:3}"
    fi
  else
    mermaid="$mermaid"$'\n'"$line"
  fi
done < "$MERMAID"

#create necessary details files
temp="$(< "$DTEMPLATE")"
mkdir -p "$DETAILS_DIR"
for id in "${!id2details[@]}" ; do
  updateDetails "$id" "${id2details["$id"]}" "$temp"
done

#generate $TARGET mermaid-js code
#NOTE: dynamic loading via XHR or iframe doesn't work due to cross-origin restrictions
temp="$(< "$TEMPLATE")"
echo "${temp/<div class=\"mermaid\"><\/div>/<div class=\"mermaid\">$'\n'$mermaid$'\n'<\/div>}" > "$TARGET"

browser="${1:-"xdg-open"}"
$browser index.html
